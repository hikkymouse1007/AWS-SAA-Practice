AWSTemplateFormatVersion: "2010-09-09"
Metadata:
    Generator: "former2"
Description: ""
Resources:
    EC2Instance:
        Type: "AWS::EC2::Instance"
        Properties:
            ImageId: "ami-00f045aed21a55240"
            InstanceType: "t2.micro"
            KeyName: "udemy"
            AvailabilityZone: !GetAtt EC2Instance2.AvailabilityZone
            Tenancy: "default"
            SubnetId: "subnet-9713b2df"
            EbsOptimized: false
            SecurityGroupIds: 
              - "sg-0d931222c16354dd2"
            SourceDestCheck: true
            BlockDeviceMappings: 
              - 
                DeviceName: "/dev/xvda"
                Ebs: 
                    Encrypted: false
                    VolumeSize: 8
                    SnapshotId: "snap-0ac31d416f3b41c6c"
                    VolumeType: "gp2"
                    DeleteOnTermination: true
            UserData: "IyEvYmluL2Jhc2gKeXVtIHVwZGF0ZSAteQp5dW0gaW5zdGFsbCAteSBodHRwZC54ODZfNjQKc3lzdGVtY3RsIHN0YXJ0IGh0dHBkLnNlcnZpY2UKc3lzdGVtY3RsIGVuYWJsZSBodHRwZC5zZXJ2aWNlCmVjaG8gIkhlbGxvIFdvcmxkIGZyb20gJChob3N0bmFtZSAtZikiID4gL3Zhci93d3cvaHRtbC9pbmRleC5odG1sCg=="
            Tags: 
              - 
                Key: "aws:cloudformation:stack-name"
                Value: "ec2-2"
              - 
                Key: "aws:cloudformation:logical-id"
                Value: "MyInstance"
              - 
                Key: "aws:cloudformation:stack-id"
                Value: !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/ec2-2/e1269d10-3fa5-11eb-b83e-06dc4f4916a2"
              - 
                Key: "Name"
                Value: "ec2-2"
            HibernationOptions: 
                Configured: false

    EC2Instance2:
        Type: "AWS::EC2::Instance"
        Properties:
            ImageId: "ami-00f045aed21a55240"
            InstanceType: "t2.micro"
            KeyName: "udemy"
            AvailabilityZone: !Sub "${AWS::Region}a"
            Tenancy: "default"
            SubnetId: "subnet-9713b2df"
            EbsOptimized: false
            SecurityGroupIds: 
              - "sg-094f747126d1cc0d4"
            SourceDestCheck: true
            BlockDeviceMappings: 
              - 
                DeviceName: "/dev/xvda"
                Ebs: 
                    Encrypted: false
                    VolumeSize: 8
                    SnapshotId: "snap-0ac31d416f3b41c6c"
                    VolumeType: "gp2"
                    DeleteOnTermination: true
            UserData: "IyEvYmluL2Jhc2gKeXVtIHVwZGF0ZSAteQp5dW0gaW5zdGFsbCAteSBodHRwZC54ODZfNjQKc3lzdGVtY3RsIHN0YXJ0IGh0dHBkLnNlcnZpY2UKc3lzdGVtY3RsIGVuYWJsZSBodHRwZC5zZXJ2aWNlCmVjaG8gIkhlbGxvIFdvcmxkIGZyb20gJChob3N0bmFtZSAtZikiID4gL3Zhci93d3cvaHRtbC9pbmRleC5odG1sCg=="
            Tags: 
              - 
                Key: "aws:cloudformation:stack-id"
                Value: !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/ec2-1/cd1d3810-3fa5-11eb-887a-062fb4db062e"
              - 
                Key: "Name"
                Value: "ec2-1"
              - 
                Key: "aws:cloudformation:stack-name"
                Value: "ec2-1"
              - 
                Key: "aws:cloudformation:logical-id"
                Value: "MyInstance"
            HibernationOptions: 
                Configured: false

    ElasticLoadBalancingV2LoadBalancer:
        Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
        Properties:
            Name: "myfirstalb"
            Scheme: "internet-facing"
            Type: "application"
            Subnets: 
              - "subnet-1518b03e"
              - "subnet-859182de"
              - "subnet-9713b2df"
            SecurityGroups: 
              - "sg-031559d9843ae1d34"
            IpAddressType: "ipv4"
            LoadBalancerAttributes: 
              - 
                Key: "access_logs.s3.enabled"
                Value: "false"
              - 
                Key: "idle_timeout.timeout_seconds"
                Value: "60"
              - 
                Key: "deletion_protection.enabled"
                Value: "false"
              - 
                Key: "routing.http2.enabled"
                Value: "true"
              - 
                Key: "routing.http.drop_invalid_header_fields.enabled"
                Value: "false"
              - 
                Key: "routing.http.desync_mitigation_mode"
                Value: "defensive"
              - 
                Key: "waf.fail_open.enabled"
                Value: "false"

    ElasticLoadBalancingV2Listener:
        Type: "AWS::ElasticLoadBalancingV2::Listener"
        Properties:
            LoadBalancerArn: !Ref ElasticLoadBalancingV2LoadBalancer
            Port: 80
            Protocol: "HTTP"
            DefaultActions: 
              - 
                TargetGroupArn: !Ref ElasticLoadBalancingV2TargetGroup
                Type: "forward"

    ElasticLoadBalancingV2TargetGroup:
        Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
        Properties:
            HealthCheckIntervalSeconds: 10
            HealthCheckPath: "/"
            Port: 80
            Protocol: "HTTP"
            HealthCheckPort: "traffic-port"
            HealthCheckProtocol: "HTTP"
            HealthCheckTimeoutSeconds: 5
            UnhealthyThresholdCount: 2
            TargetType: "instance"
            Matcher: 
                HttpCode: "200"
            HealthyThresholdCount: 5
            VpcId: "vpc-63c62105"
            Name: "myfirst-tg"
            HealthCheckEnabled: true
            TargetGroupAttributes: 
              - 
                Key: "stickiness.enabled"
                Value: "false"
              - 
                Key: "deregistration_delay.timeout_seconds"
                Value: "300"
              - 
                Key: "stickiness.type"
                Value: "lb_cookie"
              - 
                Key: "stickiness.lb_cookie.duration_seconds"
                Value: "86400"
              - 
                Key: "slow_start.duration_seconds"
                Value: "0"
              - 
                Key: "load_balancing.algorithm.type"
                Value: "round_robin"
            Targets: 
              - 
                Id: !Ref EC2Instance
                Port: 80
              - 
                Id: !Ref EC2Instance2
                Port: 80